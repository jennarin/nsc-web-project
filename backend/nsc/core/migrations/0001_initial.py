# Generated by Django 4.0.3 on 2022-03-15 20:02

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='NewUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('id_project', models.CharField(max_length=150, unique=True)),
                ('is_staff', models.BooleanField(default=False)),
                ('is_active', models.BooleanField(default=True)),
                ('is_admin', models.BooleanField(default=False)),
                ('is_member', models.BooleanField(default=False)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Adminupload1',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('filecontent1', models.FileField(blank=True, null=True, upload_to='upload/files')),
            ],
        ),
        migrations.CreateModel(
            name='Adminupload2',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('filecontent2', models.FileField(blank=True, null=True, upload_to='upload/files')),
            ],
        ),
        migrations.CreateModel(
            name='Member',
            fields=[
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, serialize=False, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Userdetail',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('project', models.CharField(max_length=200)),
                ('category', models.CharField(choices=[('โปรแกรมเพื่อการศึกษาและส่งเสริมการเรียนรู้', 'โปรแกรมเพื่อการศึกษาและส่งเสริมการเรียนรู้'), ('โปรแกรมเพื่อบริหารการเปลี่ยนแปลงสภาพภูมิอากาศและสิ่งแวดล้อม', 'โปรแกรมเพื่อบริหารการเปลี่ยนแปลงสภาพภูมิอากาศและสิ่งแวดล้อม'), ('โปรแกรมเพื่อช่วยคนพิการและผู้สูงอายุ', 'โปรแกรมเพื่อช่วยคนพิการและผู้สูงอายุ'), ('โปรแกรมเพื่อใช้ภายใต้สถานการณ์โควิด-19และโรคติดเชื้ออุบัติใหม่', 'โปรแกรมเพื่อใช้ภายใต้สถานการณ์โควิด-19และโรคติดเชื้ออุบัติใหม่')], max_length=512)),
                ('level', models.CharField(choices=[('นิสิต นักศึกษา', 'นิสิต นักศึกษา'), ('นักเรียน', 'นักเรียน')], default='', max_length=512)),
                ('institution', models.CharField(max_length=200)),
                ('advisor', models.CharField(max_length=200)),
                ('member1', models.CharField(max_length=200)),
                ('member2', models.CharField(blank=True, max_length=200, null=True)),
                ('member3', models.CharField(blank=True, max_length=200, null=True)),
                ('certificate', models.FileField(blank=True, null=True, upload_to='upload/certificate')),
                ('id_project', models.ManyToManyField(related_name='Member', to='core.member')),
            ],
        ),
    ]
